name: PyMOP Auto Runner

on:
  workflow_call:
    inputs:
      project:
        required: true
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

permissions:
  contents: write
  issues: write

jobs:
  monitor:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout Auto-PyMOP Repository
        uses: actions/checkout@v4
        with:
          repository: ContinuousAnalysis/auto-pymop
          path: auto-pymop

      - name: Install Required Python Dependencies for Auto-PyMOP
        run: |
          pip install -r auto-pymop/requirements.txt

      - name: Debug Docker Path and Version
        run: |
          echo "PATH is: $PATH"
          which docker
          docker --version

      - name: Build PyMOP Docker Image
        run: |
          sudo docker build -t pymop-runner auto-pymop/docker_files

      - name: Checkout Testing Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.project }}
          path: ${{ inputs.project }}

      - name: Run PyMOP on Testing Repository
        id: run_pymop
        shell: bash
        run: |
          # Extract just the repository name (without owner)
          REPO_NAME=$(echo "${{ inputs.project }}" | sed 's/.*\///')
          echo "Repository name: $REPO_NAME"
          
          docker run --rm \
            -v "${{ github.workspace }}:/local" \
            pymop-runner \
            bash -c "set -euxo pipefail && \
            ls -la /local && \
            cp /local/auto-pymop/scripts/run_pymop.sh /workspace/run_pymop.sh && \
            cp -r /local/${{ inputs.project }} /workspace && \
            source /workspace/pymop-venv/bin/activate && \
            chmod +x /workspace/run_pymop.sh && \
            /workspace/run_pymop.sh $REPO_NAME && \
            deactivate"

      - name: Parse PyMOP Output for Violations
        if: steps.run_pymop.outputs.changes_detected == 'true'
        run: |
          python3 auto-pymop/scripts/parse_pymop_output.py

      - name: Upload Violation Reports
        if: steps.run_pymop.outputs.changes_detected == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: pymop-violations-${{ github.run_id }}
          path: |
            auto-pymop/pymop_results_*.csv
            auto-pymop/pymop_over_time_results.csv
            auto-pymop/changed_projects.txt
          retention-days: 30

      - name: Compare PyMOP Output with Previous Run and Report New Violations
        if: steps.run_pymop.outputs.changes_detected == 'true'
        run: |
          python3 auto-pymop/scripts/track_violations.py

      - name: Clean up unneeded files
        if: steps.run_pymop.outputs.changes_detected == 'true'
        run: |
          rm -f auto-pymop/pymop_results_*.csv
          rm -f auto-pymop/changed_projects.txt
